class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ios::sync_with_stdio(0);
		cin.tie(0);
		cout.tie(0);

        stack<int> s1, s2;
        while(l1 != NULL){
            s1.push(l1->val);
            l1 = l1->next;
        }
        while(l2 != NULL){
            s2.push(l2->val);
            l2 = l2->next;
        }
        int carry = 0;
        ListNode* prev  = NULL;
        while(!s1.empty() && !s2.empty()){
            int x = s1.top() + s2.top() + carry;
            s1.pop();s2.pop();
            int rem = x % 10;
            carry = x / 10;
            ListNode* curr = new ListNode();
            curr->val = rem;
            curr->next = prev;
            prev = curr;
        }
        while(!s1.empty()){
            int x = s1.top() + carry;
            s1.pop();
            int rem = x % 10;
            carry = x / 10;
            ListNode* curr = new ListNode();
            curr->val = rem;
            curr->next = prev;
            prev = curr;
        }
        while(!s2.empty()){
            int x = s2.top() + carry;
            s2.pop();
            int rem = x % 10;
            carry = x / 10;
            ListNode* curr = new ListNode();
            curr->val = rem;
            curr->next = prev;
            prev = curr;
        }
        while(carry != 0){
            int rem = carry % 10;
            carry /= 10;
            ListNode* curr = new ListNode();
            curr->val = rem;
            curr->next = prev;
            prev = curr;
        }
        return prev;
    }
};
