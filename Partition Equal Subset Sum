class Solution{
public:
    int dp[101][5000];
    bool solve(int n, int arr[], int i, int target, int sum) {
        if (sum > target) return false; 
        if (sum == target) return true; 
        if (i >= n) return false; 
        if(dp[i][sum] != -1)return dp[i][sum];
        
        bool include = solve(n, arr, i + 1, target, sum + arr[i]);
        
        bool exclude = solve(n, arr, i + 1, target, sum);

        return dp[i][sum] = include || exclude;
    }
    int equalPartition(int N, int arr[])
    {
        memset(dp, -1, sizeof(dp));
        int sum = 0;
        for(int i = 0; i < N; i++){
            sum += arr[i];
        }
        if(sum % 2 != 0) return 0;
        if(solve(N, arr, 0, sum/2, 0))return 1;
        return 0;
    }
};
