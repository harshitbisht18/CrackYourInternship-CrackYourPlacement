class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        ios::sync_with_stdio(0);
		cin.tie(0);
		cout.tie(0);
        
        int n = nums.size();
        sort(nums.begin(), nums.end());
        vector<vector<int>> v;

        for (int k = 0; k < n - 2; ++k) {
            if (k > 0 && nums[k] == nums[k-1]) continue; 
            int target = -nums[k];
            int i = k + 1, j = n - 1;

            while (i < j) {
                int sum = nums[i] + nums[j];
                if (sum == target) {
                    v.push_back({nums[k], nums[i], nums[j]});
                    while (i < j && nums[i] == nums[i+1]) i++; 
                    while (i < j && nums[j] == nums[j-1]) j--; 
                    i++;
                    j--;
                } else if (sum < target) {
                    i++;
                } else {
                    j--;
                }
            }
        }

        return v;

    }
};
